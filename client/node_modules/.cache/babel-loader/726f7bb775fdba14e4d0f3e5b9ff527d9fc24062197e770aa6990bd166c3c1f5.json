{"ast":null,"code":"import _objectSpread from\"/workspace/music_playlist/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/music_playlist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useLayoutEffect}from\"react\";import getState from\"./flux.js\";// Don't change, here is where we initialize our context, by default it's just going to be null.\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var Context=/*#__PURE__*/React.createContext(null);// This function injects the global store to any view/component where you want to use it, we will inject the context to layout.js, you can see it here:\n// https://github.com/4GeeksAcademy/react-hello-webapp/blob/master/src/js/layout.js#L35\nvar injectContext=function injectContext(PassedComponent){var StoreWrapper=function StoreWrapper(props){//this will be passed as the contenxt value\nvar _useState=useState(getState({getStore:function getStore(){return state.store;},getActions:function getActions(){return state.actions;},setStore:function setStore(updatedStore){return setState({store:Object.assign(state.store,updatedStore),actions:_objectSpread({},state.actions)});}})),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useLayoutEffect(function(){},[]);// The initial value for the context is not null anymore, but the current state of this component,\n// the context will now have a getStore, getActions and setStore functions available, because they were declared\n// on the state of this component\nreturn/*#__PURE__*/_jsx(Context.Provider,{value:state,children:/*#__PURE__*/_jsx(PassedComponent,_objectSpread({},props))});};return StoreWrapper;};export default injectContext;","map":{"version":3,"names":["React","useState","useLayoutEffect","getState","jsx","_jsx","Context","createContext","injectContext","PassedComponent","StoreWrapper","props","_useState","getStore","state","store","getActions","actions","setStore","updatedStore","setState","Object","assign","_objectSpread","_useState2","_slicedToArray","Provider","value","children"],"sources":["/workspace/music_playlist/client/src/store/appContext.js"],"sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport getState from \"./flux.js\";\n\n// Don't change, here is where we initialize our context, by default it's just going to be null.\nexport const Context = React.createContext(null);\n\n// This function injects the global store to any view/component where you want to use it, we will inject the context to layout.js, you can see it here:\n// https://github.com/4GeeksAcademy/react-hello-webapp/blob/master/src/js/layout.js#L35\nconst injectContext = (PassedComponent) => {\n  const StoreWrapper = (props) => {\n    //this will be passed as the contenxt value\n    const [state, setState] = useState(\n      getState({\n        getStore: () => state.store,\n        getActions: () => state.actions,\n        setStore: (updatedStore) =>\n          setState({\n            store: Object.assign(state.store, updatedStore),\n            actions: { ...state.actions },\n          }),\n      })\n    );\n\n    useLayoutEffect(() => {\n\n    }, []);\n\n    // The initial value for the context is not null anymore, but the current state of this component,\n    // the context will now have a getStore, getActions and setStore functions available, because they were declared\n    // on the state of this component\n    return (\n      <Context.Provider value={state}>\n        <PassedComponent {...props} />\n      </Context.Provider>\n    );\n  };\n  return StoreWrapper;\n};\n\nexport default injectContext;"],"mappings":"2OAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,eAAe,KAAQ,OAAO,CACxD,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAEhC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,IAAM,CAAAC,OAAO,cAAGN,KAAK,CAACO,aAAa,CAAC,IAAI,CAAC,CAEhD;AACA;AACA,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,eAAe,CAAK,CACzC,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAK,CAC9B;AACA,IAAAC,SAAA,CAA0BX,QAAQ,CAChCE,QAAQ,CAAC,CACPU,QAAQ,CAAE,SAAAA,SAAA,QAAM,CAAAC,KAAK,CAACC,KAAK,GAC3BC,UAAU,CAAE,SAAAA,WAAA,QAAM,CAAAF,KAAK,CAACG,OAAO,GAC/BC,QAAQ,CAAE,SAAAA,SAACC,YAAY,QACrB,CAAAC,QAAQ,CAAC,CACPL,KAAK,CAAEM,MAAM,CAACC,MAAM,CAACR,KAAK,CAACC,KAAK,CAAEI,YAAY,CAAC,CAC/CF,OAAO,CAAAM,aAAA,IAAOT,KAAK,CAACG,OAAO,CAC7B,CAAC,CAAC,EACN,CAAC,CACH,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAb,SAAA,IAVME,KAAK,CAAAU,UAAA,IAAEJ,QAAQ,CAAAI,UAAA,IAYtBtB,eAAe,CAAC,UAAM,CAEtB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA;AACA;AACA,mBACEG,IAAA,CAACC,OAAO,CAACoB,QAAQ,EAACC,KAAK,CAAEb,KAAM,CAAAc,QAAA,cAC7BvB,IAAA,CAACI,eAAe,CAAAc,aAAA,IAAKZ,KAAK,CAAG,CAAC,CACd,CAAC,CAEvB,CAAC,CACD,MAAO,CAAAD,YAAY,CACrB,CAAC,CAED,cAAe,CAAAF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}